// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/brewmmer/session.proto

package brewmmer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetSessionRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionRequest) Reset()         { *m = GetSessionRequest{} }
func (m *GetSessionRequest) String() string { return proto.CompactTextString(m) }
func (*GetSessionRequest) ProtoMessage()    {}
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{0}
}
func (m *GetSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionRequest.Unmarshal(m, b)
}
func (m *GetSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionRequest.Marshal(b, m, deterministic)
}
func (dst *GetSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionRequest.Merge(dst, src)
}
func (m *GetSessionRequest) XXX_Size() int {
	return xxx_messageInfo_GetSessionRequest.Size(m)
}
func (m *GetSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionRequest proto.InternalMessageInfo

func (m *GetSessionRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetSessionResponse struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionResponse) Reset()         { *m = GetSessionResponse{} }
func (m *GetSessionResponse) String() string { return proto.CompactTextString(m) }
func (*GetSessionResponse) ProtoMessage()    {}
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{1}
}
func (m *GetSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionResponse.Unmarshal(m, b)
}
func (m *GetSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionResponse.Marshal(b, m, deterministic)
}
func (dst *GetSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionResponse.Merge(dst, src)
}
func (m *GetSessionResponse) XXX_Size() int {
	return xxx_messageInfo_GetSessionResponse.Size(m)
}
func (m *GetSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionResponse proto.InternalMessageInfo

func (m *GetSessionResponse) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type StartSessionRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSessionRequest) Reset()         { *m = StartSessionRequest{} }
func (m *StartSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StartSessionRequest) ProtoMessage()    {}
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{2}
}
func (m *StartSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSessionRequest.Unmarshal(m, b)
}
func (m *StartSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSessionRequest.Marshal(b, m, deterministic)
}
func (dst *StartSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSessionRequest.Merge(dst, src)
}
func (m *StartSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StartSessionRequest.Size(m)
}
func (m *StartSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartSessionRequest proto.InternalMessageInfo

func (m *StartSessionRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type StartSessionResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSessionResponse) Reset()         { *m = StartSessionResponse{} }
func (m *StartSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StartSessionResponse) ProtoMessage()    {}
func (*StartSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{3}
}
func (m *StartSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSessionResponse.Unmarshal(m, b)
}
func (m *StartSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSessionResponse.Marshal(b, m, deterministic)
}
func (dst *StartSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSessionResponse.Merge(dst, src)
}
func (m *StartSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StartSessionResponse.Size(m)
}
func (m *StartSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartSessionResponse proto.InternalMessageInfo

func (m *StartSessionResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type StopSessionRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSessionRequest) Reset()         { *m = StopSessionRequest{} }
func (m *StopSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StopSessionRequest) ProtoMessage()    {}
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{4}
}
func (m *StopSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSessionRequest.Unmarshal(m, b)
}
func (m *StopSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSessionRequest.Marshal(b, m, deterministic)
}
func (dst *StopSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSessionRequest.Merge(dst, src)
}
func (m *StopSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StopSessionRequest.Size(m)
}
func (m *StopSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopSessionRequest proto.InternalMessageInfo

func (m *StopSessionRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type StopSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSessionResponse) Reset()         { *m = StopSessionResponse{} }
func (m *StopSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StopSessionResponse) ProtoMessage()    {}
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{5}
}
func (m *StopSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSessionResponse.Unmarshal(m, b)
}
func (m *StopSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSessionResponse.Marshal(b, m, deterministic)
}
func (dst *StopSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSessionResponse.Merge(dst, src)
}
func (m *StopSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StopSessionResponse.Size(m)
}
func (m *StopSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopSessionResponse proto.InternalMessageInfo

type ListSessionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSessionRequest) Reset()         { *m = ListSessionRequest{} }
func (m *ListSessionRequest) String() string { return proto.CompactTextString(m) }
func (*ListSessionRequest) ProtoMessage()    {}
func (*ListSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{6}
}
func (m *ListSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSessionRequest.Unmarshal(m, b)
}
func (m *ListSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSessionRequest.Marshal(b, m, deterministic)
}
func (dst *ListSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSessionRequest.Merge(dst, src)
}
func (m *ListSessionRequest) XXX_Size() int {
	return xxx_messageInfo_ListSessionRequest.Size(m)
}
func (m *ListSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSessionRequest proto.InternalMessageInfo

type ListSessionResponse struct {
	Sessions             []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListSessionResponse) Reset()         { *m = ListSessionResponse{} }
func (m *ListSessionResponse) String() string { return proto.CompactTextString(m) }
func (*ListSessionResponse) ProtoMessage()    {}
func (*ListSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{7}
}
func (m *ListSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSessionResponse.Unmarshal(m, b)
}
func (m *ListSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSessionResponse.Marshal(b, m, deterministic)
}
func (dst *ListSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSessionResponse.Merge(dst, src)
}
func (m *ListSessionResponse) XXX_Size() int {
	return xxx_messageInfo_ListSessionResponse.Size(m)
}
func (m *ListSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSessionResponse proto.InternalMessageInfo

func (m *ListSessionResponse) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type Session struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	Measurements         []*Measurement       `protobuf:"bytes,4,rep,name=measurements,proto3" json:"measurements,omitempty"`
	Note                 string               `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{8}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Session) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Session) GetStopTime() *timestamp.Timestamp {
	if m != nil {
		return m.StopTime
	}
	return nil
}

func (m *Session) GetMeasurements() []*Measurement {
	if m != nil {
		return m.Measurements
	}
	return nil
}

func (m *Session) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type Measurement struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Temperature          float32              `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Measurement) Reset()         { *m = Measurement{} }
func (m *Measurement) String() string { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()    {}
func (*Measurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_a1f94905d265233d, []int{9}
}
func (m *Measurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measurement.Unmarshal(m, b)
}
func (m *Measurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measurement.Marshal(b, m, deterministic)
}
func (dst *Measurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measurement.Merge(dst, src)
}
func (m *Measurement) XXX_Size() int {
	return xxx_messageInfo_Measurement.Size(m)
}
func (m *Measurement) XXX_DiscardUnknown() {
	xxx_messageInfo_Measurement.DiscardUnknown(m)
}

var xxx_messageInfo_Measurement proto.InternalMessageInfo

func (m *Measurement) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Measurement) GetTemperature() float32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func init() {
	proto.RegisterType((*GetSessionRequest)(nil), "brewmmer.GetSessionRequest")
	proto.RegisterType((*GetSessionResponse)(nil), "brewmmer.GetSessionResponse")
	proto.RegisterType((*StartSessionRequest)(nil), "brewmmer.StartSessionRequest")
	proto.RegisterType((*StartSessionResponse)(nil), "brewmmer.StartSessionResponse")
	proto.RegisterType((*StopSessionRequest)(nil), "brewmmer.StopSessionRequest")
	proto.RegisterType((*StopSessionResponse)(nil), "brewmmer.StopSessionResponse")
	proto.RegisterType((*ListSessionRequest)(nil), "brewmmer.ListSessionRequest")
	proto.RegisterType((*ListSessionResponse)(nil), "brewmmer.ListSessionResponse")
	proto.RegisterType((*Session)(nil), "brewmmer.Session")
	proto.RegisterType((*Measurement)(nil), "brewmmer.Measurement")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionServiceClient is the client API for SessionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionServiceClient interface {
	Get(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error)
	GetActive(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error)
	List(ctx context.Context, in *ListSessionRequest, opts ...grpc.CallOption) (*ListSessionResponse, error)
	Start(ctx context.Context, in *StartSessionRequest, opts ...grpc.CallOption) (*StartSessionResponse, error)
	Stop(ctx context.Context, in *StopSessionRequest, opts ...grpc.CallOption) (*StopSessionResponse, error)
}

type sessionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSessionServiceClient(cc *grpc.ClientConn) SessionServiceClient {
	return &sessionServiceClient{cc}
}

func (c *sessionServiceClient) Get(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error) {
	out := new(GetSessionResponse)
	err := c.cc.Invoke(ctx, "/brewmmer.SessionService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) GetActive(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error) {
	out := new(GetSessionResponse)
	err := c.cc.Invoke(ctx, "/brewmmer.SessionService/GetActive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) List(ctx context.Context, in *ListSessionRequest, opts ...grpc.CallOption) (*ListSessionResponse, error) {
	out := new(ListSessionResponse)
	err := c.cc.Invoke(ctx, "/brewmmer.SessionService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) Start(ctx context.Context, in *StartSessionRequest, opts ...grpc.CallOption) (*StartSessionResponse, error) {
	out := new(StartSessionResponse)
	err := c.cc.Invoke(ctx, "/brewmmer.SessionService/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) Stop(ctx context.Context, in *StopSessionRequest, opts ...grpc.CallOption) (*StopSessionResponse, error) {
	out := new(StopSessionResponse)
	err := c.cc.Invoke(ctx, "/brewmmer.SessionService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionServiceServer is the server API for SessionService service.
type SessionServiceServer interface {
	Get(context.Context, *GetSessionRequest) (*GetSessionResponse, error)
	GetActive(context.Context, *GetSessionRequest) (*GetSessionResponse, error)
	List(context.Context, *ListSessionRequest) (*ListSessionResponse, error)
	Start(context.Context, *StartSessionRequest) (*StartSessionResponse, error)
	Stop(context.Context, *StopSessionRequest) (*StopSessionResponse, error)
}

func RegisterSessionServiceServer(s *grpc.Server, srv SessionServiceServer) {
	s.RegisterService(&_SessionService_serviceDesc, srv)
}

func _SessionService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brewmmer.SessionService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Get(ctx, req.(*GetSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_GetActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).GetActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brewmmer.SessionService/GetActive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).GetActive(ctx, req.(*GetSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brewmmer.SessionService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).List(ctx, req.(*ListSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brewmmer.SessionService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Start(ctx, req.(*StartSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brewmmer.SessionService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Stop(ctx, req.(*StopSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "brewmmer.SessionService",
	HandlerType: (*SessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _SessionService_Get_Handler,
		},
		{
			MethodName: "GetActive",
			Handler:    _SessionService_GetActive_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SessionService_List_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _SessionService_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _SessionService_Stop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/brewmmer/session.proto",
}

func init() { proto.RegisterFile("api/brewmmer/session.proto", fileDescriptor_session_a1f94905d265233d) }

var fileDescriptor_session_a1f94905d265233d = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xdf, 0xaa, 0xd3, 0x40,
	0x10, 0xc6, 0x49, 0xd2, 0xe3, 0x69, 0xa7, 0x72, 0xe0, 0xec, 0x39, 0x85, 0x10, 0xad, 0x86, 0x08,
	0x52, 0x10, 0x13, 0xa8, 0x20, 0x7a, 0x67, 0x55, 0xec, 0x8d, 0xde, 0x24, 0x7d, 0x81, 0xb4, 0x1d,
	0xcb, 0x82, 0x9b, 0x8d, 0xbb, 0x9b, 0xfa, 0xae, 0x3e, 0x83, 0x0f, 0x21, 0xd9, 0x6c, 0xfe, 0xb4,
	0x4d, 0x95, 0x43, 0xef, 0xc2, 0xcc, 0x6f, 0x66, 0xbe, 0x2f, 0x33, 0x0b, 0x5e, 0x9a, 0xd3, 0x68,
	0x2d, 0xf0, 0x17, 0x63, 0x28, 0x22, 0x89, 0x52, 0x52, 0x9e, 0x85, 0xb9, 0xe0, 0x8a, 0x93, 0x61,
	0x1d, 0xf7, 0x9e, 0xef, 0x38, 0xdf, 0xfd, 0xc0, 0x48, 0xc7, 0xd7, 0xc5, 0xf7, 0x48, 0x51, 0x86,
	0x52, 0xa5, 0x2c, 0xaf, 0xd0, 0xe0, 0x05, 0xdc, 0x2e, 0x51, 0x25, 0x55, 0x79, 0x8c, 0x3f, 0x0b,
	0x94, 0x8a, 0xdc, 0x80, 0x4d, 0xb7, 0xae, 0xe5, 0x5b, 0x33, 0x27, 0xb6, 0xe9, 0x36, 0x58, 0x00,
	0xe9, 0x42, 0x32, 0xe7, 0x99, 0x44, 0xf2, 0x0a, 0xae, 0xcd, 0x58, 0x8d, 0x8e, 0xe7, 0xb7, 0x61,
	0x3d, 0x37, 0xac, 0xd9, 0x9a, 0x08, 0x3e, 0xc2, 0x5d, 0xa2, 0x52, 0x71, 0x3c, 0xe9, 0x41, 0x3d,
	0x5e, 0xc2, 0xfd, 0x61, 0x0f, 0x23, 0xa4, 0x47, 0x6e, 0xa2, 0x78, 0x7e, 0xc9, 0xa8, 0x49, 0x29,
	0xb7, 0xd3, 0xa2, 0x9a, 0x14, 0xdc, 0x03, 0xf9, 0x4a, 0xe5, 0x91, 0x89, 0xe0, 0x33, 0xdc, 0x1d,
	0x44, 0x8d, 0xac, 0xd7, 0x30, 0x34, 0xed, 0xa4, 0x6b, 0xf9, 0x4e, 0xff, 0xc4, 0x06, 0x09, 0x7e,
	0x5b, 0x70, 0x6d, 0xa2, 0xc7, 0x8e, 0xc8, 0x3b, 0x18, 0xc9, 0xd2, 0xf9, 0x8a, 0x32, 0x74, 0x6d,
	0xad, 0xde, 0x0b, 0xab, 0xd5, 0x86, 0xf5, 0x6a, 0xc3, 0x55, 0xbd, 0xda, 0xb8, 0x85, 0xc9, 0x5b,
	0x18, 0x4a, 0xc5, 0x73, 0x5d, 0xe8, 0xfc, 0xb7, 0xb0, 0x61, 0xc9, 0x7b, 0x78, 0xcc, 0x30, 0x95,
	0x85, 0x40, 0x86, 0x99, 0x92, 0xee, 0x40, 0x1b, 0x98, 0xb4, 0x06, 0xbe, 0xb5, 0xd9, 0xf8, 0x00,
	0x25, 0x04, 0x06, 0x19, 0x57, 0xe8, 0x5e, 0xf9, 0xd6, 0x6c, 0x14, 0xeb, 0xef, 0x80, 0xc2, 0xb8,
	0x53, 0x50, 0xfa, 0x69, 0x0e, 0xd1, 0x6c, 0xe3, 0x9f, 0x7e, 0x1a, 0x98, 0xf8, 0x30, 0x5e, 0x21,
	0xcb, 0x51, 0xa4, 0xaa, 0x10, 0xd5, 0xbf, 0xb0, 0xe3, 0x6e, 0x68, 0xfe, 0xc7, 0x86, 0x1b, 0xf3,
	0x1f, 0x13, 0x14, 0x7b, 0xba, 0x41, 0xf2, 0x01, 0x9c, 0x25, 0x2a, 0xf2, 0xa4, 0x55, 0x7f, 0x72,
	0xf3, 0xde, 0xd3, 0xfe, 0xa4, 0xd9, 0xe5, 0x17, 0x18, 0x2d, 0x51, 0x2d, 0x36, 0x8a, 0xee, 0xf1,
	0x92, 0x3e, 0x9f, 0x60, 0x50, 0x9e, 0x0a, 0xe9, 0x50, 0xa7, 0x07, 0xe5, 0x4d, 0xcf, 0x64, 0x1b,
	0x31, 0x57, 0xfa, 0x1d, 0x90, 0x0e, 0xd7, 0xf3, 0xb8, 0xbc, 0x67, 0xe7, 0xd2, 0xad, 0x98, 0xf2,
	0xc8, 0xbb, 0x62, 0x4e, 0xdf, 0x8d, 0x37, 0x3d, 0x93, 0xad, 0x9a, 0xac, 0x1f, 0xe9, 0x7d, 0xbd,
	0xf9, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x41, 0xbe, 0x46, 0x90, 0x04, 0x00, 0x00,
}
